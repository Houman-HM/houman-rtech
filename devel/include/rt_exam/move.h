// Generated by gencpp from file rt_exam/move.msg
// DO NOT EDIT!


#ifndef RT_EXAM_MESSAGE_MOVE_H
#define RT_EXAM_MESSAGE_MOVE_H

#include <ros/service_traits.h>


#include <rt_exam/moveRequest.h>
#include <rt_exam/moveResponse.h>


namespace rt_exam
{

struct move
{

typedef moveRequest Request;
typedef moveResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct move
} // namespace rt_exam


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rt_exam::move > {
  static const char* value()
  {
    return "f2967bca72e0c3d566283af10d69c6aa";
  }

  static const char* value(const ::rt_exam::move&) { return value(); }
};

template<>
struct DataType< ::rt_exam::move > {
  static const char* value()
  {
    return "rt_exam/move";
  }

  static const char* value(const ::rt_exam::move&) { return value(); }
};


// service_traits::MD5Sum< ::rt_exam::moveRequest> should match 
// service_traits::MD5Sum< ::rt_exam::move > 
template<>
struct MD5Sum< ::rt_exam::moveRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rt_exam::move >::value();
  }
  static const char* value(const ::rt_exam::moveRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rt_exam::moveRequest> should match 
// service_traits::DataType< ::rt_exam::move > 
template<>
struct DataType< ::rt_exam::moveRequest>
{
  static const char* value()
  {
    return DataType< ::rt_exam::move >::value();
  }
  static const char* value(const ::rt_exam::moveRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rt_exam::moveResponse> should match 
// service_traits::MD5Sum< ::rt_exam::move > 
template<>
struct MD5Sum< ::rt_exam::moveResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rt_exam::move >::value();
  }
  static const char* value(const ::rt_exam::moveResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rt_exam::moveResponse> should match 
// service_traits::DataType< ::rt_exam::move > 
template<>
struct DataType< ::rt_exam::moveResponse>
{
  static const char* value()
  {
    return DataType< ::rt_exam::move >::value();
  }
  static const char* value(const ::rt_exam::moveResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RT_EXAM_MESSAGE_MOVE_H
